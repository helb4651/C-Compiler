Func dog returns type char [line: 11]
!   Child: 0  Param x of type char [line: 11]
!   Child: 1  Compound [line: 12]
!   !   Child: 0  Var x of type char [line: 13]
!   !   Sibling: 0  Var b of type int [line: 15]
!   !   Child: 1  Call: cat [line: 17]
!   !   !   Child: 0  Const: 10 [line: 17]
!   !   Sibling: 0  Return [line: 19]
!   !   !   Child: 0  Id: b [line: 19]
Sibling: 0  Func dog returns type int [line: 22]
!   Child: 0  Param x of type int [line: 22]
!   Child: 1  Compound [line: 23]
!   !   Child: 1  Compound [line: 24]
!   !   !   Child: 0  Var x of type int [line: 25]
Sibling: 1  Func cat returns type char [line: 29]
!   Child: 0  Param x of type char [line: 29]
!   Child: 1  Compound [line: 30]
!   !   Child: 0  Var b of type int [line: 31]
!   !   Child: 1  Return [line: 33]
Sibling: 2  Var cat of type char [line: 36]
Sibling: 3  Var unusedGlobal of type char [line: 37]
Sibling: 4  Func ibex returns type int [line: 39]
!   Child: 0  Param x is array of type char [line: 39]
!   Child: 1  Compound [line: 40]
!   !   Child: 0  Var unusedLocal of type char [line: 41]
!   !   Child: 1  Return [line: 42]
!   !   !   Child: 0  Const: true [line: 42]
Sibling: 5  Func ox returns type void [line: 45]
!   Child: 0  Param y of type char [line: 45]
!   Child: 1  Compound [line: 46]
!   !   Child: 1  Return [line: 47]
!   !   !   Child: 0  Const: 666 [line: 47]
Sibling: 6  Func emu returns type char [line: 50]
!   Child: 0  Param x of type char [line: 50]
!   Sibling: 0  Param y of type char [line: 50]
!   Sibling: 1  Param z of type char [line: 50]
!   Child: 1  Compound [line: 51]
Sibling: 7  Func main returns type char [line: 54]
!   Child: 1  Compound [line: 55]
!   !   Child: 0  Var x of type char [line: 56]
!   !   Sibling: 0  Var yuri of type char [line: 56]
!   !   Sibling: 1  Var x of type char [line: 57]
!   !   Sibling: 2  Var x of type int [line: 58]
!   !   Sibling: 3  Var ba is array of type bool [line: 60]
!   !   Sibling: 4  Var aa is array of type char [line: 61]
!   !   Sibling: 5  Var zz is array of type char [line: 62]
!   !   Sibling: 6  Var bb is array of type int [line: 63]
!   !   Sibling: 7  Var cc is array of type int [line: 63]
!   !   Sibling: 8  Var b of type int [line: 65]
!   !   Sibling: 9  Var c of type int [line: 65]
!   !   Child: 1  Id: v [line: 67]
!   !   Sibling: 0  If [line: 69]
!   !   !   Child: 0  Id: x [line: 69]
!   !   !   Child: 1  Id: x [line: 69]
!   !   Sibling: 1  While [line: 70]
!   !   !   Child: 0  Id: x [line: 70]
!   !   !   Child: 1  Id: x [line: 70]
!   !   Sibling: 2  While [line: 71]
!   !   !   Child: 0  Call: ox [line: 71]
!   !   !   !   Child: 0  Const: 10 [line: 71]
!   !   !   Child: 1  Id: x [line: 71]
!   !   Sibling: 3  Assign: = [line: 73]
!   !   !   Child: 0  Id: x [line: 73]
!   !   !   Child: 1  Id: cat [line: 73]
!   !   Sibling: 4  Assign: = [line: 74]
!   !   !   Child: 0  Id: x [line: 74]
!   !   !   Child: 1  Id: b [line: 74]
!   !   Sibling: 5  Assign: += [line: 75]
!   !   !   Child: 0  Id: x [line: 75]
!   !   !   Child: 1  Id: b [line: 75]
!   !   Sibling: 6  Assign: -= [line: 76]
!   !   !   Child: 0  Id: b [line: 76]
!   !   !   Child: 1  Id: x [line: 76]
!   !   Sibling: 7  Op: > [line: 77]
!   !   !   Child: 0  Id: b [line: 77]
!   !   !   Child: 1  Id: x [line: 77]
!   !   Sibling: 8  Assign: ++ [line: 78]
!   !   !   Child: 0  Id: b [line: 78]
!   !   Sibling: 9  If [line: 80]
!   !   !   Child: 0  Id: bb [line: 80]
!   !   !   Child: 1  Id: x [line: 80]
!   !   Sibling: 10  While [line: 81]
!   !   !   Child: 0  Id: bb [line: 81]
!   !   !   Child: 1  Id: x [line: 81]
!   !   Sibling: 11  Break [line: 83]
!   !   Sibling: 12  While [line: 85]
!   !   !   Child: 0  Id: b [line: 85]
!   !   !   Child: 1  Compound [line: 85]
!   !   !   !   Child: 1  Break [line: 85]
!   !   Sibling: 13  Op: + [line: 87]
!   !   !   Child: 0  Id: aa [line: 87]
!   !   !   Child: 1  Const: 6 [line: 87]
!   !   Sibling: 14  Op: < [line: 88]
!   !   !   Child: 0  Id: aa [line: 88]
!   !   !   Child: 1  Id: zz [line: 88]
!   !   Sibling: 15  Op: < [line: 89]
!   !   !   Child: 0  Id: bb [line: 89]
!   !   !   Child: 1  Id: cc [line: 89]
!   !   Sibling: 16  Op: == [line: 91]
!   !   !   Child: 0  Id: x [line: 91]
!   !   !   Child: 1  Const: true [line: 91]
!   !   Sibling: 17  Op: == [line: 92]
!   !   !   Child: 0  Id: x [line: 92]
!   !   !   Child: 1  Const: 1 [line: 92]
!   !   Sibling: 18  Op: == [line: 93]
!   !   !   Child: 0  Id: b [line: 93]
!   !   !   Child: 1  Const: true [line: 93]
!   !   Sibling: 19  Op: + [line: 95]
!   !   !   Child: 0  Const: false [line: 95]
!   !   !   Child: 1  Id: x [line: 95]
!   !   Sibling: 20  Op: * [line: 97]
!   !   !   Child: 0  Id: x [line: 97]
!   !   !   Child: 1  Const: false [line: 97]
!   !   Sibling: 21  Op: not [line: 99]
!   !   !   Child: 0  Id: x [line: 99]
!   !   Sibling: 22  Op: not [line: 100]
!   !   !   Child: 0  Op: + [line: 100]
!   !   !   !   Child: 0  Id: x [line: 100]
!   !   !   !   Child: 1  Id: b [line: 100]
!   !   Sibling: 23  Op: - [line: 101]
!   !   !   Child: 0  Id: b [line: 101]
!   !   Sibling: 24  Op: [ [line: 103]
!   !   !   Child: 0  Id: x [line: 103]
!   !   !   Child: 1  Const: 496 [line: 103]
!   !   Sibling: 25  Assign: = [line: 104]
!   !   !   Child: 0  Id: b [line: 104]
!   !   !   Child: 1  Op: == [line: 104]
!   !   !   !   Child: 0  Id: x [line: 104]
!   !   !   !   Child: 1  Op: + [line: 104]
!   !   !   !   !   Child: 0  Id: x [line: 104]
!   !   !   !   !   Child: 1  Op: * [line: 104]
!   !   !   !   !   !   Child: 0  Id: x [line: 104]
!   !   !   !   !   !   Child: 1  Op: and [line: 104]
!   !   !   !   !   !   !   Child: 0  Id: x [line: 104]
!   !   !   !   !   !   !   Child: 1  Id: x [line: 104]
!   !   Sibling: 26  Assign: = [line: 105]
!   !   !   Child: 0  Id: b [line: 105]
!   !   !   Child: 1  Op: == [line: 105]
!   !   !   !   Child: 0  Id: x [line: 105]
!   !   !   !   Child: 1  Op: + [line: 105]
!   !   !   !   !   Child: 0  Id: x [line: 105]
!   !   !   !   !   Child: 1  Op: * [line: 105]
!   !   !   !   !   !   Child: 0  Id: x [line: 105]
!   !   !   !   !   !   Child: 1  Op: and [line: 105]
!   !   !   !   !   !   !   Child: 0  Id: x [line: 105]
!   !   !   !   !   !   !   Child: 1  Id: y [line: 105]
!   !   Sibling: 27  Assign: = [line: 106]
!   !   !   Child: 0  Id: b [line: 106]
!   !   !   Child: 1  Op: or [line: 106]
!   !   !   !   Child: 0  Op: == [line: 106]
!   !   !   !   !   Child: 0  Id: x [line: 106]
!   !   !   !   !   Child: 1  Id: x [line: 106]
!   !   !   !   Child: 1  Op: * [line: 106]
!   !   !   !   !   Child: 0  Id: x [line: 106]
!   !   !   !   !   Child: 1  Op: and [line: 106]
!   !   !   !   !   !   Child: 0  Id: x [line: 106]
!   !   !   !   !   !   Child: 1  Id: x [line: 106]
!   !   Sibling: 28  Op: * [line: 108]
!   !   !   Child: 0  Id: x [line: 108]
!   !   Sibling: 29  Op: and [line: 109]
!   !   !   Child: 0  Op: * [line: 109]
!   !   !   !   Child: 0  Id: aa [line: 109]
!   !   !   Child: 1  Id: b [line: 109]
!   !   Sibling: 30  Op: [ [line: 110]
!   !   !   Child: 0  Id: aa [line: 110]
!   !   !   Child: 1  Op: * [line: 110]
!   !   !   !   Child: 0  Id: aa [line: 110]
!   !   Sibling: 31  Op: [ [line: 111]
!   !   !   Child: 0  Id: aa [line: 111]
!   !   !   Child: 1  Const: 666 [line: 111]
!   !   Sibling: 32  Op: [ [line: 113]
!   !   !   Child: 0  Id: aa [line: 113]
!   !   !   Child: 1  Id: b [line: 113]
!   !   Sibling: 33  Op: [ [line: 115]
!   !   !   Child: 0  Id: aa [line: 115]
!   !   !   Child: 1  Id: cat [line: 115]
!   !   Sibling: 34  Op: [ [line: 117]
!   !   !   Child: 0  Id: aa [line: 117]
!   !   !   Child: 1  Id: aa [line: 117]
!   !   Sibling: 35  Op: [ [line: 118]
!   !   !   Child: 0  Id: AA [line: 118]
!   !   !   Child: 1  Const: 1 [line: 118]
!   !   Sibling: 36  Op: [ [line: 120]
!   !   !   Child: 0  Id: aa [line: 120]
!   !   !   Child: 1  Id: meerkat [line: 120]
!   !   Sibling: 37  Id: xyzzy [line: 122]
!   !   Sibling: 38  Call: meerkat [line: 123]
!   !   Sibling: 39  Op: and [line: 124]
!   !   !   Child: 0  Const: true [line: 124]
!   !   !   Child: 1  Op: / [line: 124]
!   !   !   !   Child: 0  Id: xyzzy [line: 124]
!   !   !   !   Child: 1  Const: 666 [line: 124]
!   !   Sibling: 40  Call: flight [line: 126]
!   !   !   Child: 0  Op: not [line: 126]
!   !   !   !   Child: 0  Const: 5 [line: 126]
!   !   !   Sibling: 0  Op: - [line: 126]
!   !   !   !   Child: 0  Const: true [line: 126]
!   !   !   Sibling: 1  Id: uu [line: 126]
!   !   !   Sibling: 2  Id: y [line: 126]
!   !   !   Sibling: 3  Op: + [line: 126]
!   !   !   !   Child: 0  Id: x [line: 126]
!   !   !   !   Child: 1  Op: * [line: 126]
!   !   !   !   !   Child: 0  Id: x [line: 126]
!   !   !   !   !   Child: 1  Id: b [line: 126]
!   !   Sibling: 41  Call: x [line: 128]
!   !   Sibling: 42  Call: dog [line: 130]
!   !   !   Child: 0  Const: 3 [line: 130]
!   !   !   Sibling: 0  Const: 5 [line: 130]
!   !   Sibling: 43  Call: ibex [line: 131]
!   !   Sibling: 44  Call: dog [line: 133]
!   !   !   Child: 0  Const: true [line: 133]
!   !   Sibling: 45  Call: cat [line: 135]
!   !   !   Child: 0  Id: aa [line: 135]
!   !   Sibling: 46  Call: cat [line: 136]
!   !   !   Child: 0  Id: ba [line: 136]
!   !   Sibling: 47  Call: ibex [line: 138]
!   !   !   Child: 0  Id: x [line: 138]
!   !   Sibling: 48  Call: ibex [line: 139]
!   !   !   Child: 0  Id: bb [line: 139]
!   !   Sibling: 49  Op: [ [line: 140]
!   !   !   Child: 0  Id: ibex [line: 140]
!   !   !   Child: 1  Const: 3 [line: 140]
!   !   Sibling: 50  Op: + [line: 142]
!   !   !   Child: 0  Id: ibex [line: 142]
!   !   !   Child: 1  Const: 4 [line: 142]
!   !   Sibling: 51  Id: ibex [line: 143]
!   !   Sibling: 52  Op: [ [line: 145]
!   !   !   Child: 0  Id: aa [line: 145]
!   !   !   Child: 1  Op: [ [line: 145]
!   !   !   !   Child: 0  Id: zz [line: 145]
!   !   !   !   Child: 1  Const: 1 [line: 145]
!   !   Sibling: 53  Op: [ [line: 146]
!   !   !   Child: 0  Id: aa [line: 146]
!   !   !   Child: 1  Id: zz [line: 146]
!   !   Sibling: 54  Op: [ [line: 147]
!   !   !   Child: 0  Id: aa [line: 147]
!   !   !   Child: 1  Call: ox [line: 147]
!   !   !   !   Child: 0  Const: true [line: 147]
!   !   Sibling: 55  Assign: = [line: 149]
!   !   !   Child: 0  Id: x [line: 149]
!   !   !   Child: 1  Call: ox [line: 149]
!   !   !   !   Child: 0  Const: 28 [line: 149]
!   !   Sibling: 56  Assign: = [line: 150]
!   !   !   Child: 0  Id: x [line: 150]
!   !   !   Child: 1  Op: + [line: 150]
!   !   !   !   Child: 0  Id: x [line: 150]
!   !   !   !   Child: 1  Call: ox [line: 150]
!   !   !   !   !   Child: 0  Const: 6 [line: 150]
!   !   Sibling: 57  Call: cat [line: 151]
!   !   !   Child: 0  Call: ox [line: 151]
!   !   !   !   Child: 0  Const: 492 [line: 151]
!   !   Sibling: 58  Call: cat [line: 152]
!   !   !   Child: 0  Const: true [line: 152]
!   !   Sibling: 59  Call: cat [line: 153]
!   !   !   Child: 0  Call: cat [line: 153]
!   !   !   !   Child: 0  Const: 492 [line: 153]
!   !   Sibling: 60  Assign: = [line: 155]
!   !   !   Child: 0  Id: x [line: 155]
!   !   !   Child: 1  Assign: = [line: 155]
!   !   !   !   Child: 0  Id: x [line: 155]
!   !   !   !   Child: 1  Const: true [line: 155]
!   !   Sibling: 61  Assign: = [line: 156]
!   !   !   Child: 0  Id: b [line: 156]
!   !   !   Child: 1  Assign: = [line: 156]
!   !   !   !   Child: 0  Id: b [line: 156]
!   !   !   !   Child: 1  Const: 666 [line: 156]
!   !   Sibling: 62  Assign: = [line: 157]
!   !   !   Child: 0  Id: x [line: 157]
!   !   !   Child: 1  Assign: = [line: 157]
!   !   !   !   Child: 0  Id: b [line: 157]
!   !   !   !   Child: 1  Assign: = [line: 157]
!   !   !   !   !   Child: 0  Id: x [line: 157]
!   !   !   !   !   Child: 1  Id: b [line: 157]
!   !   Sibling: 63  Op: and [line: 159]
!   !   !   Child: 0  Op: * [line: 159]
!   !   !   !   Child: 0  Id: x [line: 159]
!   !   !   !   Child: 1  Id: b [line: 159]
!   !   !   Child: 1  Op: * [line: 159]
!   !   !   !   Child: 0  Id: b [line: 159]
!   !   !   !   Child: 1  Id: x [line: 159]
!   !   Sibling: 64  Call: emu [line: 161]
!   !   !   Child: 0  Op: + [line: 161]
!   !   !   !   Child: 0  Id: x [line: 161]
!   !   !   !   Child: 1  Id: b [line: 161]
!   !   !   Sibling: 0  Id: parrot [line: 161]
!   !   !   Sibling: 1  Op: and [line: 161]
!   !   !   !   Child: 0  Id: b [line: 161]
!   !   !   !   Child: 1  Id: x [line: 161]
!   !   Sibling: 65  Call: emu [line: 162]
!   !   !   Child: 0  Const: false [line: 162]
!   !   !   Sibling: 0  Op: and [line: 162]
!   !   !   !   Child: 0  Const: true [line: 162]
!   !   !   !   Child: 1  Call: emu [line: 162]
!   !   !   !   !   Child: 0  Op: + [line: 162]
!   !   !   !   !   !   Child: 0  Id: x [line: 162]
!   !   !   !   !   !   Child: 1  Id: b [line: 162]
!   !   !   !   !   Sibling: 0  Id: parrot [line: 162]
!   !   !   !   !   Sibling: 1  Op: and [line: 162]
!   !   !   !   !   !   Child: 0  Id: b [line: 162]
!   !   !   !   !   !   Child: 1  Id: x [line: 162]
!   !   !   Sibling: 1  Const: true [line: 162]
!   !   !   Sibling: 2  Op: * [line: 162]
!   !   !   !   Child: 0  Id: x [line: 162]
!   !   !   !   Child: 1  Id: b [line: 162]
!   !   Sibling: 66  Id: bb [line: 164]
!   !   Sibling: 67  Return [line: 166]
!   !   !   Child: 0  Id: aa [line: 166]
